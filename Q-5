#include <iostream>

void showAddresses(const char*);
void concatenate(char*, const char*);
int compare(const char*, const char*);
int length(const char*);
void toUpperCase(char*);
void reverse(char*);
void insertString(char*, const char*, int);

int main() {
    const int SIZE = 256;
    char str1[SIZE], str2[SIZE];
    int choice, position;

    std::cout << "Enter the first string: ";
    std::cin.getline(str1, SIZE);

    std::cout << "Enter the second string: ";
    std::cin.getline(str2, SIZE);

    do {
        std::cout << "\nString Manipulation Menu:\n";
        std::cout << "1. Show address of each character in string\n";
        std::cout << "2. Concatenate two strings\n";
        std::cout << "3. Compare two strings\n";
        std::cout << "4. Calculate length of the string\n";
        std::cout << "5. Convert all lowercase characters to uppercase\n";
        std::cout << "6. Reverse the string\n";
        std::cout << "7. Insert a string into another string\n";
        std::cout << "8. Exit\n";
        std::cout << "Enter your choice: ";
        std::cin >> choice;

        switch (choice) {
            case 1:
                showAddresses(str1);
                break;
            case 2:
                concatenate(str1, str2);
                std::cout << "Concatenated string: " << str1 << std::endl;
                break;
            case 3:
                std::cout << "Comparison result: " << compare(str1, str2) << std::endl;
                break;
            case 4:
                std::cout << "Length of the first string: " << length(str1) << std::endl;
                break;
            case 5:
                toUpperCase(str1);
                std::cout << "Uppercase string: " << str1 << std::endl;
                break;
            case 6:
                reverse(str1);
                std::cout << "Reversed string: " << str1 << std::endl;
                break;
            case 7:
                std::cout << "Enter the position to insert the second string: ";
                std::cin >> position;
                insertString(str1, str2, position);
                std::cout << "String after insertion: " << str1 << std::endl;
                break;
            case 8:
                std::cout << "Exiting program." << std::endl;
                break;
            default:
                std::cout << "Invalid choice. Please try again." << std::endl;
        }
    } while (choice != 8);

    return 0;
}

void showAddresses(const char* str) {
    while (*str) {
        std::cout << "Character " << *str << " has address: " << static_cast<const void*>(str) << std::endl;
        ++str;
    }
}

void concatenate(char* destination, const char* source) {
    while (*destination) {
        ++destination;
    }
    while (*source) {
        *destination++ = *source++;
    }
    *destination = '\0';
}

int compare(const char* str1, const char* str2) {
    while (*str1 && (*str1 == *str2)) {
        ++str1;
        ++str2;
    }
    return *(const unsigned char*)str1 - *(const unsigned char*)str2;
}

int length(const char* str) {
    const char* strEnd = str;
    while (*strEnd) {
        ++strEnd;
    }
    return strEnd - str;
}

void toUpperCase(char* str) {
    while (*str) {
        if (*str >= 'a' && *str <= 'z') {
            *str -= 'a' - 'A';
        }
        ++str;
    }
}

void reverse(char* str) {
    int len = length(str);
    for (int i = 0; i < len / 2; ++i) {
        char temp = str[i];
        str[i] = str[len - i - 1];
        str[len - i - 1] = temp;
    }
}

void insertString(char* destination, const char* source, int position) {
    int len = length(destination);
    int insertLen = length(source);
    if (position > len) {
        position = len;
    }
    for (int i = len; i >= position; --i) {
        destination[i + insertLen] = destination[i];
    }
    for (int i = 0; i < insertLen; ++i) {
        destination[position + i] = source[i];
    }
}
